plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.1'
    id 'de.undercouch.download' version '5.6.0'
}

group = 'com.uniphore.platform'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.uniphore.platform.helloworld.Application'
    }
}

jib {
    from {
        image = 'registry.uniphore.com/chainguard/jre:openjdk-21'
    }
    extraDirectories {
        paths {
            path {
                from = "${buildDir}/datadog"
                into = "/app/lib/datadog"
            }
        }
        container{
            jvmFlags = [
                    "-javaagent:/app/lib/datadog/dd-java-agent.jar"
            ]
        }
    }
}

tasks.named('jib') {
    dependsOn downloadDDAgent
}

task downloadDDAgent(type: Download) {
    src 'https://dtdg.co/latest-java-tracer'
    dest "${buildDir}/datadog/dd-java-agent.jar"
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    reports.junitXml.outputLocation = layout.buildDirectory.dir('test-reports')
    reports.html.outputLocation = layout.buildDirectory.dir('test-reports/html')
}

jacocoTestReport {
    dependsOn test
    reports {
        csv.required = false
        xml.required = true
        xml.outputLocation = layout.buildDirectory.file('test-reports/jacoco.xml')
        html.outputLocation = layout.buildDirectory.dir('test-reports/jacocoHtml')
    }
}
